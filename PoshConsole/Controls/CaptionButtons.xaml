<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
   xmlns:huddled="http://schemas.huddledmasses.org/wpf"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<!-- Resource dictionary entries should be defined here.   xmlns:huddle="http://schemas.huddledmasses.org/wpf/controls" -->
	
	<Style TargetType="{x:Type ButtonBase}" x:Key="CaptionButtonStyle">
    	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}"/>
    	<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#59F3F3F3" Offset="0"/>
					<GradientStop Color="#59EBEBEB" Offset="0.5"/>
					<GradientStop Color="#59DDDDDD" Offset="0.5"/>
					<GradientStop Color="#59CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF000000"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
               <Grid>
						<Border SnapsToDevicePixels="True" x:Name="Chrome" 
								   BorderThickness="{TemplateBinding BorderThickness}"
								   Background="{TemplateBinding Background}"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}" 
								   CornerRadius="0,0,0,0" >
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  Margin="{TemplateBinding Padding}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Content="{TemplateBinding Content}" 
										  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
										  ContentTemplate="{TemplateBinding ContentTemplate}" 
										  RecognizesAccessKey="True"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BitmapEffect" TargetName="Chrome">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="#FF539AD8" GlowSize="6"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#FFADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type ButtonBase}" x:Key="LeftSystemCaptionButtonStyle">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FF00B8FF" GlowSize="10" Opacity="1"/>
					</Setter.Value>
				</Setter>
				<Setter Property="ClipToBounds" Value="False"/>
				<Setter Property="SnapsToDevicePixels" Value="False"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#FFADADAD"/>
			</Trigger>
		</Style.Triggers>
    	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonWidthKey}}"/>
    	<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#59F3F3F3" Offset="0"/>
					<GradientStop Color="#59EBEBEB" Offset="0.5"/>
					<GradientStop Color="#59DDDDDD" Offset="0.5"/>
					<GradientStop Color="#59CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF000000"/>
		<Setter Property="BorderThickness" Value="1,0,1,1"/>
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
               <Grid>
						<Border SnapsToDevicePixels="True" x:Name="Chrome" 
								   BorderThickness="{TemplateBinding BorderThickness}"
								   Background="{TemplateBinding Background}"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}" 
								   CornerRadius="0,0,0,3" >
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  Margin="{TemplateBinding Padding}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Content="{TemplateBinding Content}" 
										  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
										  ContentTemplate="{TemplateBinding ContentTemplate}" 
										  RecognizesAccessKey="True"/>
						</Border>
					</Grid>
               <ControlTemplate.Triggers>
                  <!-- Comment out both of these DataTriggers if you need to edit in Blend...-->
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="True">
                     <Setter Property="Visibility" Value="Hidden"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="False">
                     <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ButtonBase}" x:Key="RightSystemCaptionButtonStyle">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FFFF0000" GlowSize="13" Opacity="0.805"/>
					</Setter.Value>
				</Setter>
				<Setter Property="ClipToBounds" Value="False"/>
				<Setter Property="SnapsToDevicePixels" Value="False"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#FFADADAD"/>
			</Trigger>
		</Style.Triggers>
      <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonWidthKey}}"/>
    	<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#59F3F3F3" Offset="0"/>
					<GradientStop Color="#59EBEBEB" Offset="0.5"/>
					<GradientStop Color="#59DDDDDD" Offset="0.5"/>
					<GradientStop Color="#59CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF000000"/>
		<Setter Property="BorderThickness" Value="0,0,1,1"/>
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
               <Grid>
						<Border SnapsToDevicePixels="True" x:Name="Chrome" 
								   BorderThickness="{TemplateBinding BorderThickness}"
								   Background="{TemplateBinding Background}"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}" 
								   CornerRadius="0,0,3,0" >
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Margin="{TemplateBinding Padding}" 
										  Content="{TemplateBinding Content}" 
										  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
										  ContentTemplate="{TemplateBinding ContentTemplate}" 
										  RecognizesAccessKey="True"/>
						</Border>
					</Grid>
               <ControlTemplate.Triggers>
                  <!-- Comment out both of these DataTriggers if you need to edit in Blend...-->
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="True">
                     <Setter Property="Visibility" Value="Hidden"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="False">
                     <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
               </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	
	<Style TargetType="{x:Type ButtonBase}" x:Key="SystemCaptionButtonStyle">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FF00B8FF" GlowSize="10" Opacity="1"/>
					</Setter.Value>
				</Setter>
				<Setter Property="ClipToBounds" Value="False"/>
				<Setter Property="SnapsToDevicePixels" Value="False"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#FFADADAD"/>
			</Trigger>
		</Style.Triggers>
    	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonWidthKey}}"/>
    	<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#59F3F3F3" Offset="0"/>
					<GradientStop Color="#59EBEBEB" Offset="0.5"/>
					<GradientStop Color="#59DDDDDD" Offset="0.5"/>
					<GradientStop Color="#59CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF000000"/>
		<Setter Property="BorderThickness" Value="0,0,1,1"/>
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
               <Grid>
						<Border SnapsToDevicePixels="True" x:Name="Chrome" 
								   BorderThickness="{TemplateBinding BorderThickness}"
								   Background="{TemplateBinding Background}"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}" 
								   CornerRadius="0,0,0,0" >
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Margin="{TemplateBinding Padding}" 
										  Content="{TemplateBinding Content}" 
										  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
										  ContentTemplate="{TemplateBinding ContentTemplate}" 
										  RecognizesAccessKey="True"/>
						</Border>
					</Grid>
               <ControlTemplate.Triggers>
                  <!-- Comment out both of these DataTriggers if you need to edit in Blend...-->
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="True">
                     <Setter Property="Visibility" Value="Hidden"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(huddled:NativeBehaviors.NativeBehaviors)[2].IsGlassEnabled}" Value="False">
                     <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>